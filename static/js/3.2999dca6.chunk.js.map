{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","post","src","alt","comment","message","countLike","AddPostForm","useForm","register","handleSubmit","onSubmit","data","addPost","addPostText","type","name","ref","MyPosts","postElements","posts","map","p","likesCount","id","title","newPost","connect","state","profilePage","newPostText","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onMouseLeave","updateUserStatus","onClick","ProfileInfo","profile","profileInfo","photos","small","aboutMe","Preloader","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getUserStatus","React","Component","compose","isAuthenticated","auth","withRouter"],"mappings":"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","file":"static/js/3.2999dca6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__2vXrG\",\"newPost\":\"MyPosts_newPost__3oeDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2I-xx\",\"comment\":\"Post_comment__L59d7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1CzLu\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src=\"/user.png\" alt=\"logo\" />\r\n            <div className={s.comment}>\r\n                <p>{props.message}</p>\r\n                <p>\r\n                    like <span>{props.countLike}</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddPostForm = (props) => {\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        props.addPost(data.addPostText);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n                <textarea type=\"text\" name=\"addPostText\" ref={register}></textarea>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Send post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyPosts = props => {\r\n    let postElements = props.posts.map((p) => (\r\n        <Post message={p.message} countLike={p.likesCount} key={p.id} />\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={s.title}>My Posts</h2>\r\n            <div className={s.newPost}>\r\n                <div>\r\n                    <AddPostForm addPost={props.addPost} />\r\n                </div>\r\n            </div>\r\n            {postElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPosts);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? (\r\n                <div>\r\n                    <input\r\n                        onChange={ onStatusChange }\r\n                        autoFocus={true}\r\n                        onMouseLeave={ deactivateEditMode }\r\n                        type=\"text\"\r\n                        value={ status }\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <span onClick={activateEditMode}>\r\n                        { status ? status : \"changeStatus\" }\r\n                    </span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatusWithHook';\r\n\r\nconst ProfileInfo = props => {\r\n    if(!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div><img\r\n                src={props.profile.photos.small}\r\n                alt=\"small avatar\"\r\n            />\r\n            </div>\r\n            <div>\r\n                <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            </div>\r\n            <div>\r\n                <p>{props.profile.aboutMe}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getUserStatus(userId);\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        authorisedUserId: state.auth.userId\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n    withRouter,\r\n)\r\n(ProfileContainer);\r\n"],"sourceRoot":""}